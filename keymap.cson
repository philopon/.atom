# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

'atom-text-editor.vim-mode.normal-mode':
  'alt-p': 'multi-cursor:expandUp'
  'alt-n': 'multi-cursor:expandDown'
  'alt-j': 'multi-cursor:move-last-cursor-down'
  'alt-k': 'multi-cursor:move-last-cursor-up'
  'alt-h': 'multi-cursor:move-last-cursor-left'
  'alt-l': 'multi-cursor:move-last-cursor-right'

  'f': 'lazy-motion:forward'
  'x': 'core:delete'
  'cmd-p': 'clipboard-plus:toggle'

  'ctrl-w o': 'custom:close-other-panes'

'atom-text-editor.lazy-motion':
  'ctrl-n': 'lazy-motion:forward'
  'ctrl-p': 'lazy-motion:backward'
